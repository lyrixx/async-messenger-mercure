include:
    - docker-compose.worker.yml

volumes:
    postgres-data: {}

services:
    router:
        build: services/router
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "./services/router/certs:/etc/ssl/certs"
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        networks:
            - default
        profiles:
            - default

    frontend:
        build:
            context: services/php
            target: frontend
        environment:
            - SERVER_NAME=${PROJECT_ROOT_DOMAIN}
            - UID=${USER_ID}
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - "../..:/var/www:cached"
        profiles:
            - default
        labels:
            - "project-name=${PROJECT_NAME}"
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.rule=Host(`${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.tls=true"
            - "traefik.http.services.${PROJECT_NAME}-frontend.loadbalancer.server.port=80"

    postgres:
        image: postgres:16
        environment:
            - POSTGRES_USER=app
            - POSTGRES_PASSWORD=app
        volumes:
            - postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
        profiles:
            - default
